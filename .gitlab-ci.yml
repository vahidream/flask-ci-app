stages:
  - build
  - sast
  - upload
  - docker_push
  - deploy

variables:
<<<<<<< HEAD
<<<<<<< HEAD
  DOCKER_IMAGE: "vahidevs/flask-ci-app"
  DEFECTDOJO_HOST: "192.168.11.147"
  KUBE_NAMESPACE: "flask-app"
=======
  DEPLOY_SERVER: "192.168.11.148"
  DEPLOY_USER: "deployuser"
  DEPLOY_PATH: "/home/flask-ci-app"
  DOCKER_IMAGE: "vahidevs/flask-ci-app"
>>>>>>> 6af5f45 (ðŸš€ Ä°lk commit: Flask + PostgreSQL + CI/CD)
=======
  DOCKER_IMAGE: "vahidevs/flask-ci-app"
  DEFECTDOJO_HOST: "192.168.11.147"
  KUBE_NAMESPACE: "flask-app"
>>>>>>> 86e98af (âœ… CI/CD pipeline added)

build:
  stage: build
  tags:
    - flask
    - docker
  script:
<<<<<<< HEAD
<<<<<<< HEAD
    - docker info
=======
    - echo "ðŸ”¨ Docker baÄŸlantÄ±sÄ± yoxlanÄ±lÄ±r..."
    - docker info
    - echo "ðŸ“¦ Docker image build olunur..."
>>>>>>> 6af5f45 (ðŸš€ Ä°lk commit: Flask + PostgreSQL + CI/CD)
=======
    - docker info
>>>>>>> 86e98af (âœ… CI/CD pipeline added)
    - docker build -t $DOCKER_IMAGE:latest .

sast_scan:
  stage: sast
<<<<<<< HEAD
<<<<<<< HEAD
  image: aquasec/trivy:latest
  allow_failure: true
  script:
    - trivy image --format json --output trivy-report.json $DOCKER_IMAGE:latest || true
  artifacts:
    paths:
      - trivy-report.json
=======
  image: python:3.11-slim
=======
  image: aquasec/trivy:latest
>>>>>>> 86e98af (âœ… CI/CD pipeline added)
  allow_failure: true
  script:
    - trivy image --format json --output trivy-report.json $DOCKER_IMAGE:latest || true
  artifacts:
    paths:
<<<<<<< HEAD
      - sast.json
>>>>>>> 6af5f45 (ðŸš€ Ä°lk commit: Flask + PostgreSQL + CI/CD)
=======
      - trivy-report.json
>>>>>>> 86e98af (âœ… CI/CD pipeline added)

upload_to_defectdojo:
  stage: upload
  image: curlimages/curl:latest
  script:
<<<<<<< HEAD
<<<<<<< HEAD
    - |
      curl -X POST "http://$DEFECTDOJO_HOST:8084/api/v2/import-scan/" \
      -H "Authorization: Token $DEFECTDOJO_API_TOKEN" \
      -F "scan_type=Container Scan" \
      -F "engagement=$DEFECTDOJO_ENGAGEMENT_ID" \
      -F "product_name=$DEFECTDOJO_PRODUCT_NAME" \
      -F "file=@trivy-report.json"
=======
    - echo "ðŸ“¤ Uploading Snyk SAST results to DefectDojo..."
=======
>>>>>>> 86e98af (âœ… CI/CD pipeline added)
    - |
      curl -X POST "http://$DEFECTDOJO_HOST:8084/api/v2/import-scan/" \
      -H "Authorization: Token $DEFECTDOJO_API_TOKEN" \
      -F "scan_type=Container Scan" \
      -F "engagement=$DEFECTDOJO_ENGAGEMENT_ID" \
      -F "product_name=$DEFECTDOJO_PRODUCT_NAME" \
<<<<<<< HEAD
      -F "file=@sast.json"
>>>>>>> 6af5f45 (ðŸš€ Ä°lk commit: Flask + PostgreSQL + CI/CD)
=======
      -F "file=@trivy-report.json"
>>>>>>> 86e98af (âœ… CI/CD pipeline added)
  dependencies:
    - sast_scan
  artifacts:
    when: always

docker_push:
  stage: docker_push
  image: docker:latest
  before_script:
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
  script:
<<<<<<< HEAD
<<<<<<< HEAD
=======
    - echo "ðŸ“¦ Docker image push olunur Docker Hub-a..."
>>>>>>> 6af5f45 (ðŸš€ Ä°lk commit: Flask + PostgreSQL + CI/CD)
=======
>>>>>>> 86e98af (âœ… CI/CD pipeline added)
    - docker push $DOCKER_IMAGE:latest

deploy:
  stage: deploy
<<<<<<< HEAD
<<<<<<< HEAD
  image: bitnami/kubectl:latest
  script:
    - echo "$KUBECONFIG_CONTENT" | base64 -d > kubeconfig.yaml
    - export KUBECONFIG=$PWD/kubeconfig.yaml
    - kubectl apply -f postgres-all.yaml -n $KUBE_NAMESPACE
    - kubectl apply -f flask-deployment.yaml -n $KUBE_NAMESPACE
    - kubectl apply -f flask-service.yaml -n $KUBE_NAMESPACE
=======
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client rsync
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $DEPLOY_SERVER > ~/.ssh/known_hosts 2>/dev/null
    - chmod 644 ~/.ssh/known_hosts
=======
  image: bitnami/kubectl:latest
>>>>>>> 86e98af (âœ… CI/CD pipeline added)
  script:
    - echo "$KUBECONFIG_CONTENT" | base64 -d > kubeconfig.yaml
    - export KUBECONFIG=$PWD/kubeconfig.yaml
    - kubectl apply -f postgres-all.yaml -n $KUBE_NAMESPACE
    - kubectl apply -f flask-deployment.yaml -n $KUBE_NAMESPACE
    - kubectl apply -f flask-service.yaml -n $KUBE_NAMESPACE

>>>>>>> 6af5f45 (ðŸš€ Ä°lk commit: Flask + PostgreSQL + CI/CD)
