stages:
  - build
  - sast
  - upload
  - docker_push
  - deploy

variables:
  DOCKER_IMAGE: "vahidevs/flask-ci-app"
  DEFECTDOJO_HOST: "192.168.11.140"  # əgər dəyişməyibsə
  KUBE_NAMESPACE: "flask-app"

build:
  stage: build
  tags:
    - flask
    - docker
  script:
    - docker info
    - docker build -t $DOCKER_IMAGE:latest .

sast_scan:
  stage: sast
  image: aquasec/trivy:latest
  allow_failure: true
  script:
    - trivy image --format json --output trivy-report.json $DOCKER_IMAGE:latest || true
  artifacts:
    paths:
      - trivy-report.json

upload_to_defectdojo:
  stage: upload
  image: curlimages/curl:latest
  script:
    - |
      curl -X POST "http://$DEFECTDOJO_HOST:8888/api/v2/import-scan/" \
      -H "Authorization: Token $DEFECTDOJO_API_TOKEN" \
      -F "scan_type=Container Scan" \
      -F "engagement=$DEFECTDOJO_ENGAGEMENT_ID" \
      -F "product_name=$DEFECTDOJO_PRODUCT_NAME" \
      -F "file=@trivy-report.json"
  dependencies:
    - sast_scan
  artifacts:
    when: always

docker_push:
  stage: docker_push
  image: docker:latest
  before_script:
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
  script:
    - docker push $DOCKER_IMAGE:latest

deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - echo "$KUBECONFIG_CONTENT" | base64 -d > kubeconfig.yaml
    - export KUBECONFIG=$PWD/kubeconfig.yaml
    - kubectl apply -f postgres-all.yaml -n $KUBE_NAMESPACE
    - kubectl apply -f flask-deployment.yaml -n $KUBE_NAMESPACE
    - kubectl apply -f flask-service.yaml -n $KUBE_NAMESPACE

