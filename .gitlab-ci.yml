stages:
  - build
  - sast
  - upload
  - deploy

variables:
  DEPLOY_SERVER: "192.168.11.140"
  DEPLOY_USER: "deployuser"
  DEPLOY_PATH: "/home/flask-ci-app"
  DOCKER_IMAGE: "flask-ci-app"
  DEFECTDOJO_HOST: "host.docker.internal"

build:
  stage: build
  tags:
    - flask
    - docker
  before_script:
    - 'which ssh-agent || ( apk add --no-cache openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - apk add --no-cache openssh-client rsync
    - ssh-keyscan -H $DEPLOY_SERVER > ~/.ssh/known_hosts 2>/dev/null
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "ðŸ”¨ Docker baÄŸlantÄ±sÄ± yoxlanÄ±lÄ±r..."
    - docker info
    - echo "ðŸ“¦ Docker image build olunur..."
    - docker build -t $DOCKER_IMAGE .

sast_scan:
  stage: sast
  tags:
    - flask
    - docker
  image: python:3.11-slim
  allow_failure: true
  before_script:
    - apt-get update && apt-get install -y curl unzip
    - curl -Lo snyk https://static.snyk.io/cli/latest/snyk-linux
    - chmod +x snyk && mv snyk /usr/local/bin/
  script:
    - snyk auth "$SNYK_TOKEN"
    - snyk code test --json > sast.json || true
  artifacts:
    paths:
      - sast.json

upload_to_defectdojo:
  stage: upload
  tags:
    - flask
    - docker
  image: curlimages/curl:latest
  script:
    - |
      echo "ðŸ“¤ Uploading Snyk SAST results to DefectDojo..."
      curl -X POST "http://$DEFECTDOJO_HOST:8888/api/v2/import-scan/" \
      -H "Authorization: Token $DEFECTDOJO_API_TOKEN" \
      -F "scan_type=Snyk SAST" \
      -F "minimum_severity=Low" \
      -F "verified=true" \
      -F "active=true" \
      -F "engagement=$DEFECTDOJO_ENGAGEMENT_ID" \
      -F "product_name=$DEFECTDOJO_PRODUCT_NAME" \
      -F "file=@sast.json"
  dependencies:
    - sast_scan
  artifacts:
    when: always


deploy:
  stage: deploy
  tags:
    - flask
    - docker
  image: alpine:latest  # âœ… rsync-É™ icazÉ™ verÉ™n bazadan istifadÉ™ et
  before_script:
    - apk add --no-cache openssh-client rsync  # âœ… rsync vÉ™ ssh agenti É™lavÉ™ et
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $DEPLOY_SERVER > ~/.ssh/known_hosts 2>/dev/null
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "ðŸš€ Deploy baÅŸlayÄ±r..."
    - rsync -avz --delete --exclude=".git" -e "ssh -o StrictHostKeyChecking=no" ./ $DEPLOY_USER@$DEPLOY_SERVER:$DEPLOY_PATH/
    - ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_SERVER "cd $DEPLOY_PATH && docker-compose down && docker-compose up --build -d"
